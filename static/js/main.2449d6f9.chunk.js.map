{"version":3,"sources":["images/tdraft_placeholder_lower_case.png","images/tdraft_tangerine.png","actions/index.js","actions/types.js","components/TextEditor.js","components/Fab/Fab.js","components/pages/Home.js","components/pages/About.js","App.js","serviceWorker.js","reducers/textEditorReducer.js","reducers/placeHolderReducer.js","reducers/fabReducer.js","reducers/index.js","index.js"],"names":["module","exports","handlePlaceHolder","placeHolderPresent","type","payload","handleFabIcon","icon","TextEditor","onChange","editorState","setState","handleClick","console","log","props","placeHolder","handleEditorRef","textInput","current","focus","handleKeyCommand","command","newState","RichUtils","state","onUnderlineClick","toggleInlineStyle","onToggleCode","toggleCode","EditorState","createEmpty","React","createRef","className","onClick","this","ref","Component","connect","placeHolderShow","Fab","handleClipBoard","handleCopyConfirmationAnimation","text","editorRef","getCurrentContent","getPlainText","navigator","clipboard","writeText","then","err","error","class","fabIcon","to","faInfo","size","faChevronLeft","faCopy","fab","textEditor","Home","homeContainerClass","copyConfirmationClass","showCopyConfrimation","handleHomeAnimation","id","src","placeholderLowerCase","alt","useEffect","tangerineLogo","href","target","rel","App","path","exact","component","About","Boolean","window","location","hostname","match","INTIAL_STATE","hasText","combineReducers","action","serviceWorker","ready","registration","unregister","catch","message","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2449d6f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tdraft_placeholder_lower_case.358f22cc.png\";","module.exports = __webpack_public_path__ + \"static/media/tdraft_tangerine.9116827e.png\";","import { PLACE_HOLDER_SHOW, FAB_ICON, EDITOR_REF } from \"./types\";\r\n// import {\r\n//   Editor,\r\n//   EditorState,\r\n//   convertToRaw,\r\n//   convertFromRaw,\r\n//   ContentState,\r\n// } from \"draft-js\";\r\n\r\n// Placeholder actions\r\nexport const handlePlaceHolder = (placeHolderPresent) => {\r\n  return {\r\n    type: PLACE_HOLDER_SHOW,\r\n    payload: placeHolderPresent,\r\n  };\r\n};\r\n// End of Placeholder actions\r\n\r\n// Fab actions\r\nexport const handleFabIcon = (icon) => {\r\n  return {\r\n    type: FAB_ICON,\r\n    payload: icon,\r\n  };\r\n};\r\n// End of Fab actions\r\n\r\n// Editor actions\r\nexport const handleEditorRef = (ref) => {\r\n  return {\r\n    type: EDITOR_REF,\r\n    payload: ref,\r\n  };\r\n};\r\n// End of Editor actions\r\n","// Editor\r\nexport const EDITOR_REF = \"EDITOR_TEXT\";\r\n\r\n// Fab\r\nexport const FAB_ICON = \"FAB_ICON\";\r\n\r\n// Placeholder\r\nexport const PLACE_HOLDER_SHOW = \"PLACE_HOLDER_SHOW\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\r\n// import Fab from './Fab/Fab';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faUnderline, faCode } from '@fortawesome/free-solid-svg-icons'\r\nimport { handlePlaceHolder, handleFabIcon, handleEditorRef } from \"./../actions\";\r\nimport \"./TextEditor.scss\";\r\n\r\nclass TextEditor extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  onChange = (editorState) => {\r\n    this.setState({ editorState });\r\n  };\r\n\r\n  handleClick = () => {\r\n    console.log(\"handleClick ran!\");\r\n    if (this.props.placeHolder) {\r\n      this.props.handlePlaceHolder(false);\r\n      // this.props.handleHomeAnimation('animate__animated animate__flipInY');\r\n      this.props.handleFabIcon(\"clipboard\");\r\n      this.props.handleEditorRef(this.textInput);\r\n    }\r\n    this.textInput.current.focus();\r\n  };\r\n\r\n  handleKeyCommand = (command) => {\r\n    const newState = RichUtils.handleKeyCommand(\r\n      this.state.editorState,\r\n      command\r\n    );\r\n\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  };\r\n\r\n  onUnderlineClick = () => {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\r\n    );\r\n  };\r\n\r\n  onToggleCode = () => {\r\n    this.onChange(RichUtils.toggleCode(this.state.editorState));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editorCoontainer\" onClick={this.handleClick}>\r\n        {/* <h1>Better Letter</h1> */}\r\n        {/* <button onClick={this.onUnderlineClick}><FontAwesomeIcon icon={faUnderline} /> Underline</button>\r\n        <button onClick={this.onToggleCode}><FontAwesomeIcon icon={faCode} /> Code Block</button> */}\r\n        <Editor\r\n          editorState={this.state.editorState}\r\n          // placeholder={this.props.placeHolder && \"|  Tap anywhere\"}\r\n          handleKeyCommand={this.handleKeyCommand}\r\n          onChange={this.onChange}\r\n          ref={this.textInput}\r\n        />\r\n        {/* <Fab /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default TextEditor;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  placeHolder: state.placeHolder.placeHolderShow,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handlePlaceHolder, handleFabIcon, handleEditorRef })(\r\n  TextEditor\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faInfo,\r\n  faCopy,\r\n  // faShare,\r\n  faChevronLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Fab.scss\";\r\nimport { handleFabIcon } from \"./../../actions\";\r\n\r\nclass Fab extends Component {\r\n\r\n  handleFabIcon = (icon) => {\r\n    switch (icon) {\r\n      case \"back\":\r\n        this.props.handleFabIcon(\"back\");\r\n        // ? Why is this not doing anything, home unmounting too quickly?\r\n        // this.props.handleHomeAnimation('animate__animated animate__bounceIn');\r\n        break;\r\n      case \"clipboard\":\r\n        this.props.handleFabIcon(\"clipboard\");\r\n        break;\r\n      case \"info\":\r\n        this.props.handleFabIcon(\"info\");\r\n        break;\r\n      default:\r\n        this.props.handleFabIcon(\"info\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  handleClipBoard = () => {\r\n    this.props.handleCopyConfirmationAnimation('copyConfirmation animate__animated animate__slideInUp')\r\n    var text = this.props.editorRef.current.props.editorState\r\n      .getCurrentContent()\r\n      .getPlainText();\r\n    navigator.clipboard.writeText(text).then(\r\n      function () {\r\n        console.log(\"Async: Copying to clipboard was successful!\");\r\n      },\r\n      function (err) {\r\n        console.error(\"Async: Could not copy text: \", err);\r\n      }\r\n    );\r\n    this.props.editorRef.current.focus();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"fabContainer\">\r\n        <div className=\"fabButtonContainer\">\r\n          {/* this.props.fabIcon == 'clipboard' this.props.fabIcon == 'back' */}\r\n          {this.props.fabIcon === \"info\" && (\r\n            <Link\r\n              onClick={() => this.handleFabIcon(\"back\")}\r\n              className=\"icon noSelect\"\r\n              to=\"/about\"\r\n            >\r\n              <button className=\"infoFabButton\">\r\n                <FontAwesomeIcon className=\"icon\" icon={faInfo} size=\"xs\" />\r\n              </button>\r\n            </Link>\r\n          )}\r\n          {this.props.fabIcon === \"back\" && (\r\n            <Link\r\n              onClick={() => this.handleFabIcon(\"info\")}\r\n              className=\"icon noSelect\"\r\n              to=\"/\"\r\n            >\r\n              <button className=\"infoFabButton\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon\"\r\n                  icon={faChevronLeft}\r\n                  size=\"xs\"\r\n                />\r\n              </button>\r\n            </Link>\r\n          )}\r\n          {/* //TODO: rename in store to copy */}\r\n          {this.props.fabIcon === \"clipboard\" && (\r\n            <Link\r\n              onClick={this.handleClipBoard}\r\n              className=\"icon noSelect animate__animated animate__fadeInRightBig\"\r\n              to=\"/\"\r\n            >\r\n              <button class=\"infoFabButton\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon\"\r\n                  icon={faCopy}\r\n                  size=\"xs\"\r\n                />\r\n              </button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  fabIcon: state.fab.fabIcon,\r\n  editorRef: state.textEditor.ref,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleFabIcon })(Fab);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TextEditor from \"./../TextEditor\";\r\nimport { handlePlaceHolder } from './../../actions'\r\n// import placeholder from \"./../../images/tdraft_placeholder.png\";\r\n// import placeholderSmall from \"./../../images/tdraft_placeholder_small.png\";\r\nimport placeholderLowerCase from \"./../../images/tdraft_placeholder_lower_case.png\";\r\nimport Fab from \"./../Fab/Fab\";\r\nimport \"./Home.scss\";\r\nimport 'animate.css';\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    homeContainerClass: '',\r\n    copyConfirmationClass: 'copyConfirmation',\r\n    showCopyConfrimation: false,\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //   document.getElementById('homeContainer').className = 'animate__animated animate__bounceOutLeft';\r\n  // }\r\n\r\n  handlePlaceHolder = () => {\r\n    this.props.handlePlaceHolder(false);\r\n  }\r\n\r\n  handleHomeAnimation = (className) => {\r\n    this.setState({\r\n      homeContainerClass: className,\r\n    })\r\n    console.log('Inisde handleHomeExit!');\r\n  }\r\n\r\n  handleCopyConfirmationAnimation = (className) => {\r\n    this.setState({\r\n      showCopyConfrimation: true,\r\n      copyConfirmationClass: className,\r\n    })\r\n    console.log('Inisde handleHomeExit!');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='homeContainer' className={this.state.homeContainerClass}>\r\n        {/* //! adding animation here made the fab have unexpected behavior, not coming up with keyboard on Android */}\r\n        {this.state.showCopyConfrimation && <div className={this.state.copyConfirmationClass}>Copied!</div>}\r\n        <TextEditor handleHomeAnimation={this.handleHomeAnimation}/>\r\n        {this.props.placeHolder && (\r\n          <div className=\"placeholderContainer\" onClick={this.handlePlaceHolder}>\r\n            {/* <img className=\"placeholder\" src={placeholder} alt=\"placeholder\" /> */}\r\n            {/* <img className=\"placeholder\" src={placeholderSmall} alt=\"placeholder\" /> */}\r\n            <img className=\"placeholder animate__animated animate__rubberBand\" src={placeholderLowerCase} alt=\"placeholder\" />\r\n          </div>\r\n        )}\r\n        <Fab handleCopyConfirmationAnimation={this.handleCopyConfirmationAnimation}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  placeHolder: state.placeHolder.placeHolderShow,\r\n  editorRef: state.textEditor.ref,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handlePlaceHolder })(Home);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleFabIcon } from \"./../../actions\";\r\nimport Fab from \"./../Fab/Fab\";\r\nimport \"./About.scss\";\r\nimport 'animate.css';\r\nimport tangerineLogo from './../../images/tdraft_tangerine.png';\r\n\r\n// function About(props) {\r\nfunction About({ handleFabIcon }) {\r\n  useEffect(() => {\r\n    handleFabIcon(\"back\");\r\n  }, [handleFabIcon]); // dependencies\r\n\r\n  return (\r\n    <>\r\n      <div className=\"aboutContainer animate__animated animate__bounceInLeft\">\r\n        <div className=\"aboutContentContainer\">\r\n          <div className=\"aboutContent\">\r\n            <div>\r\n              <div className=\"logoContainer\">\r\n                <img className=\"logo animate__animated animate__heartBeat\" src={tangerineLogo} alt=\"tdraft Tangerine Logo\" />\r\n              </div>\r\n              {/* <img className=\"logo animate__animated animate__rubberBand\" src={tangerineLogo} alt=\"tdraft Tangerine Logo\" /> */}\r\n              <p>\r\n                tdraft is a simple, mobile-optimized text editor for the\r\n                web.\r\n            </p>\r\n              <p>Type distraction free and then move your text to other apps.</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"authors\">Made by:</p>\r\n              <p className=\"authors\">\r\n                <a href=\"https://www.linkedin.com/in/jonathan-basallaje-08a043141/\" target=\"_blank\" rel=\"noopener noreferrer\">Jonathan </a>and\r\n              <a href=\"https://www.linkedin.com/in/theobasallaje/\" target=\"_blank\" rel=\"noopener noreferrer\"> Theo Basallaje</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Fab />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default connect(mapStateToProps, {\r\n  handleFabIcon,\r\n})(About);\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Home from \"./components/pages/Home\";\r\nimport About from \"./components/pages/About\";\r\n\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Router>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, {})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { EDITOR_REF } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n    hasText: null,\r\n    ref: null,\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case EDITOR_REF:\r\n      return { ...state, ref: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { PLACE_HOLDER_SHOW } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n  placeHolderShow: true,\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case PLACE_HOLDER_SHOW:\r\n      return { ...state, placeHolderShow: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FAB_ICON } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n  fabIcon: 'info'\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FAB_ICON:\r\n      return { ...state, fabIcon: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport textEditorReducer from './textEditorReducer';\r\nimport placeHolderReducer from './placeHolderReducer'\r\nimport fabReducer from './fabReducer';\r\n\r\nexport default combineReducers({\r\n    textEditor: textEditorReducer,\r\n    placeHolder: placeHolderReducer,\r\n    fab: fabReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// Redux Setup \r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n// Reducers\r\nimport reducers from './reducers';\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// Redux Dev Tool\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//Creating Centreal Store for State\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root'));"],"sourceRoot":""}